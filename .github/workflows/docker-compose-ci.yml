name: Docker Compose CI

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Create docker-compose-ci.yml for testing
        run: |
          cat > docker-compose-ci.yml <<EOL
          version: '3.8'
          
          services:
            postgres:
              image: postgres:16
              environment:
                POSTGRES_USER: postgres
                POSTGRES_PASSWORD: postgres
                POSTGRES_DB: test_db
              ports:
                - "5432:5432"
              healthcheck:
                test: ["CMD-SHELL", "pg_isready -U postgres"]
                interval: 5s
                timeout: 5s
                retries: 5
            
            redis:
              image: redis:latest
              ports:
                - "6379:6379"
              healthcheck:
                test: ["CMD", "redis-cli", "ping"]
                interval: 5s
                timeout: 5s
                retries: 5
            
            backend:
              build:
                context: .
                dockerfile: Dockerfile.backend
              depends_on:
                - postgres
                - redis
              environment:
                - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/test_db
                - REDIS_URL=redis://redis:6379/0
                - CI=true
              command: sh -c "sleep 5 && flask db upgrade"
          EOL
      
      - name: Build and test services
        run: |
          docker-compose -f docker-compose-ci.yml build
          docker-compose -f docker-compose-ci.yml up -d postgres redis
          sleep 10 # Give services time to start
          docker-compose -f docker-compose-ci.yml run --rm backend
