name: CI Migration Fix

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
        
      - name: Build backend
        run: |
          # Create temporary Dockerfile to fix wheel build issue
          cat > Dockerfile.backend.temp <<EOL
          FROM python:3.11-slim
          
          # Prevent Python from writing pyc files & enable unbuffered logging
          ENV PYTHONDONTWRITEBYTECODE=1
          ENV PYTHONUNBUFFERED=1
          
          # Set working dir inside container
          WORKDIR /app
          
          # Install system dependencies
          RUN apt-get update && apt-get install -y build-essential
          
          # Copy & install python dependencies
          COPY requirements.txt .
          #! install wheel and setuptools first to avoid bdist_wheel error with Flask-Testing
          RUN pip install --upgrade pip && pip install wheel setuptools && pip install -r requirements.txt
          
          # Copy rest of app code
          COPY . .
          
          # Expose the port Flask app is running (5001)
          EXPOSE 5001
          
          # Run automated db migrations before serving Flask app via gunicorn
          CMD ["sh", "-c", "flask db upgrade && gunicorn -b 0.0.0.0:5001 server.app:app"]
          EOL
          
          docker build -f Dockerfile.backend.temp -t music-rewrapped-backend .
        
      - name: Run migrations
        run: |
          docker network create app_network || true
          docker run --rm -d --name redis --network app_network redis:latest
          docker run --rm --network app_network \
            -e DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db \
            -e REDIS_URL=redis://redis:6379/0 \
            -e CI=true \
            music-rewrapped-backend \
            flask db upgrade
            
      - name: Build frontend
        run: docker build -f client/Dockerfile -t music-rewrapped-frontend .
        
      # Add deployment steps here